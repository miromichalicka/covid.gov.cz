{"version":3,"sources":["webpack:///./src/templates/custom-page/custom-page.tsx","webpack:///./src/components/breadcrumb/breadcrumb.tsx","webpack:///./src/components/breadcrumb/breadcrumb.module.scss"],"names":["page","data","title","I18n","className","items","url","variant","dangerouslySetInnerHTML","__html","processed","query","getBreadcrumbClasses","classNames","classes","getItemClasses","index","aria-label","key","item","isNavItem","to","label","module","exports"],"mappings":"2FACA,kIAoCA,UAxBqC,SAAC,GAAa,IAC3CA,EAD2C,EAAXC,KACtC,KAEA,OACE,2BACE,uBAAQC,MAAOF,cAAqBG,4CACpC,uBAAWC,UAAU,QACnB,yBAAKA,UAAU,QACb,uBACEC,MAAO,CAAC,CAAEH,MAAOC,YAAT,QAAuBG,IAAK,KAAON,EAD7C,OAEEO,QAAQ,aAGZ,wBAAIH,UAAU,uCAAuCJ,EAPvD,OAQE,6BAASI,UAAU,6BAChBJ,WACC,yBAAKQ,wBAAyB,CAAEC,OAAQT,UAAaU,iBAU1D,IAAMC,EAAN,a,mJCpBDC,EAAuB,SAACL,GAC5B,OAAOM,IAAW,aAAcC,IAAf,oBAA4C,CAC3D,sBAAmC,YAAZP,KAqC3B,EAjCqC,SAAC,GAAkC,IAAhCF,EAAgC,EAAhCA,MAAgC,IAAzBE,eAAyB,MAAf,SAAe,EAChEQ,EAAiB,SAACC,GAA0B,MAChD,OAAOH,IAAW,mBAAoBC,IAArB,uBACdA,IADc,sBACiBE,IAAUX,SAD3B,EAAjB,KAKF,OACE,yBAAKD,UAAL,cAA6Ba,aAAW,cACtC,wBAAIb,UAAWQ,EAAqBL,IACjCF,EAAA,KAAU,cACT,OACE,wBACEa,IAAG,mBADL,EAEEd,UAAWW,EAAeC,IAxBtB,SAACG,GACjB,gBAAQA,EAAD,MAyBMC,CAAA,GACC,uBACEC,GAAIF,EADN,IAEEf,UAFF,mBAGEkB,MAAOH,EAAKjB,QAGd,0BAAME,UAAU,oBAZtB,W,qBCnCVmB,EAAOC,QAAU,CAAC,oBAAsB,gDAAgD,eAAiB,2CAA2C,qBAAuB","file":"component---src-templates-custom-page-custom-page-tsx-dedaa4984c2b0e142d94.js","sourcesContent":["import { IPage, IQuery } from 'graphql-types';\nimport { Helmet } from 'react-helmet';\nimport React from 'react';\nimport Container from '@/components/container';\nimport { graphql } from 'gatsby';\nimport Breadcrumb from '@/components/breadcrumb';\nimport Layout from '@/layouts/default-layout';\nimport I18n from '@/components/i18n';\n\ninterface IProps {\n  data: IQuery;\n}\n\nconst CustomPage: React.FC<IProps> = ({ data }) => {\n  const page: IPage = data.page;\n\n  return (\n    <Layout>\n      <Helmet title={page.title + ' | ' + I18n('covid_portal').toUpperCase()} />\n      <Container className=\"mb-4\">\n        <div className=\"pt-1\">\n          <Breadcrumb\n            items={[{ title: I18n('home'), url: '/' }, page.title]}\n            variant=\"inverse\"\n          />\n        </div>\n        <h1 className=\"text-white mt-2 h2 font-weight-bold\">{page.title}</h1>\n        <article className=\"bg-white rounded p-2 mb-1\">\n          {page.content && (\n            <div dangerouslySetInnerHTML={{ __html: page.content.processed }} />\n          )}\n        </article>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default CustomPage;\n\nexport const query = graphql`\n  query($slug: String!, $langCode: String!) {\n    page(path: { alias: { eq: $slug } }) {\n      id\n      content {\n        processed\n      }\n      title\n      changed\n      path {\n        alias\n      }\n    }\n    translation(langcode: { eq: $langCode }, source: { eq: \"home\" }) {\n      target\n    }\n  }\n`;\n","import classNames from 'classnames';\nimport React from 'react';\nimport Link from '../link';\nimport classes from './breadcrumb.module.scss';\n\ninterface INavItem {\n  title: string;\n  url: string;\n}\n\ninterface IProps {\n  items: (string | INavItem)[];\n  variant?: 'normal' | 'inverse';\n}\n\nconst isNavItem = (item: any): item is INavItem => {\n  return (item as INavItem).title !== undefined;\n};\n\nconst getBreadcrumbClasses = (variant: IProps['variant']): string => {\n  return classNames('breadcrumb', classes.breadcrumbContainer, {\n    'breadcrumb--inverse': variant === 'inverse',\n  });\n};\n\nconst Breadcrumb: React.FC<IProps> = ({ items, variant = 'normal' }) => {\n  const getItemClasses = (index: number): string => {\n    return classNames('breadcrumb__item', classes.breadcrumbItem, {\n      [classes.breadcrumbItemActive]: index === items.length - 1,\n    });\n  };\n\n  return (\n    <nav className=\"breadcrumbs\" aria-label=\"breadcrumb\">\n      <ol className={getBreadcrumbClasses(variant)}>\n        {items.map((item, index) => {\n          return (\n            <li\n              key={`breadcrumb-item-${index}`}\n              className={getItemClasses(index)}\n            >\n              {isNavItem(item) ? (\n                <Link\n                  to={item.url}\n                  className=\"breadcrumb__link\"\n                  label={item.title}\n                />\n              ) : (\n                <span className=\"breadcrumb__link\">{item}</span>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbContainer\":\"breadcrumb-module--breadcrumbContainer--aIVuB\",\"breadcrumbItem\":\"breadcrumb-module--breadcrumbItem--3jBwP\",\"breadcrumbItemActive\":\"breadcrumb-module--breadcrumbItemActive--6MwJy\"};"],"sourceRoot":""}