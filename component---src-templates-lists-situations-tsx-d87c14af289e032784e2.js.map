{"version":3,"sources":["webpack:///./src/components/category-item/category-item.tsx","webpack:///./node_modules/@material-ui/icons/esm/Phone.js","webpack:///./src/components/looking-for-something/looking-for-something.tsx","webpack:///./src/components/looking-for-something/looking-for-something.module.scss","webpack:///./src/templates/lists/situations.tsx","webpack:///./src/components/headline/headline.tsx","webpack:///./src/components/breadcrumb/breadcrumb.tsx","webpack:///./node_modules/@material-ui/icons/esm/KeyboardArrowRight.js","webpack:///./src/components/headline/headline.module.scss","webpack:///./src/components/content-icon/content-icon.tsx","webpack:///./src/components/breadcrumb/breadcrumb.module.scss","webpack:///./src/components/category-item/category-item.module.scss"],"names":["name","path","iconCode","to","className","styles","code","categoryItemTitle","style","fontSize","createSvgIcon","createElement","d","searchingHeader","searchingDescription","callHeader","callDescription","classes","container","section","dangerouslySetInnerHTML","__html","description","separator","header","href","link","module","exports","data","nodes","searchingTitle","callTitle","title","I18n","items","url","variant","noPadding","n","key","target","query","children","headline","getBreadcrumbClasses","classNames","getItemClasses","index","aria-label","item","isNavItem","label","iconClassName"],"mappings":"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","file":"component---src-templates-lists-situations-tsx-d87c14af289e032784e2.js","sourcesContent":["import { KeyboardArrowRight } from '@material-ui/icons';\nimport Link from '@/components/link';\nimport ContentIcon from '@/components/content-icon/content-icon';\nimport React, { FC } from 'react';\n\nimport styles from './category-item.module.scss';\n\ntype Props = {\n  name: string;\n  path: string;\n  iconCode: string;\n};\n\nconst CategoryItem: FC<Props> = ({ name, path, iconCode }) => {\n  return (\n    <Link to={path} className={styles.categoryItem + ' py-1'}>\n      <ContentIcon className={styles.categoryItemIcon} code={iconCode} />\n      <span className={styles.categoryItemTitle}>{name}</span>\n      <KeyboardArrowRight style={{ fontSize: 16 }} className=\"color-yellow\" />\n    </Link>\n  );\n};\n\nexport default CategoryItem;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z\"\n}), 'Phone');","import { Phone } from '@material-ui/icons';\nimport React from 'react';\nimport classes from './looking-for-something.module.scss';\n\ninterface IProps {\n  searchingHeader: string;\n  searchingDescription: string;\n  callHeader: string;\n  callDescription: string;\n}\n\nconst LookingForSomething: React.FC<IProps> = ({\n  searchingHeader,\n  searchingDescription,\n  callHeader,\n  callDescription,\n}: IProps) => {\n  return (\n    <div className={classes.container}>\n      <section className={classes.section}>\n        <header\n          className={classes.header}\n          dangerouslySetInnerHTML={{ __html: searchingHeader }}\n        />\n        <p className={classes.description}>{searchingDescription}</p>\n      </section>\n\n      <hr className={classes.separator} />\n\n      <section className={classes.section}>\n        <Phone fontSize=\"large\" className=\"mr-2\" />\n        <header className={classes.header}>\n          {callHeader}\n          &nbsp;\n          <strong>\n            <a href=\"tel:1221\" className={classes.link}>\n              1121\n            </a>\n          </strong>\n        </header>\n        <p className={classes.description}>{callDescription}</p>\n      </section>\n    </div>\n  );\n};\n\nexport default LookingForSomething;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"looking-for-something-module--container--3l5Nn\",\"section\":\"looking-for-something-module--section--16Yia\",\"description\":\"looking-for-something-module--description--2asjn\",\"header\":\"looking-for-something-module--header--Fc6hb\",\"link\":\"looking-for-something-module--link--k-zEl\",\"separator\":\"looking-for-something-module--separator--10Fs-\"};","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport ContentBox from '@/components/content-box';\nimport Container from '@/components/container';\nimport { IQuery } from 'graphql-types';\nimport Breadcrumb from '@/components/breadcrumb';\nimport Headline from '@/components/headline';\nimport CategoryItem from '@/components/category-item';\nimport Layout from '@/layouts/default-layout';\nimport LookingForSomething from '@/components/looking-for-something';\nimport I18n from '@/components/i18n';\n\ninterface IProps {\n  data: IQuery;\n}\n\nconst Situations: React.FC<IProps> = ({ data }) => {\n  const {\n    allArea: { nodes },\n  } = data;\n  const {\n    searchingTitle,\n    searchingDescription,\n    callTitle,\n    callDescription,\n  } = data as any;\n\n  return (\n    <Layout>\n      <Helmet\n        title={\n          I18n('situations_overview') +\n          ' | ' +\n          I18n('covid_portal').toUpperCase()\n        }\n      />\n      <Container>\n        <div className=\"pt-1\">\n          <Breadcrumb\n            items={[\n              { title: I18n('home'), url: '/' },\n              { title: I18n('life_situations'), url: I18n('slug_situations') },\n            ]}\n            variant=\"inverse\"\n          />\n        </div>\n        <div className=\"mt-3\">\n          <Headline>{I18n('situations_overview')}</Headline>\n        </div>\n        <div className=\"mt-3\">\n          <ContentBox noPadding>\n            {nodes.map(\n              (n) =>\n                n.relationships.situation !== null && (\n                  <CategoryItem\n                    key={n.id}\n                    name={n.name}\n                    path={n.path.alias}\n                    iconCode={n.relationships.field_ref_icon?.code}\n                  />\n                ),\n            )}\n          </ContentBox>\n        </div>\n      </Container>\n      <Container className=\"mt-3 mb-3\">\n        <LookingForSomething\n          searchingHeader={searchingTitle.target}\n          searchingDescription={searchingDescription.target}\n          callHeader={callTitle.target}\n          callDescription={callDescription.target}\n        />\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Situations;\n\nexport const query = graphql`\n  query SituationTypeQuery($langCode: String!) {\n    allArea(filter: { langcode: { eq: $langCode } }, sort: { fields: name }) {\n      nodes {\n        name\n        id\n        path {\n          alias\n        }\n        relationships {\n          situation {\n            id\n          }\n          field_ref_icon {\n            code\n          }\n        }\n      }\n    }\n    searchingTitle: translation(\n      langcode: { eq: $langCode }\n      source: { eq: \"still_searching_title\" }\n    ) {\n      target\n    }\n    searchingDescription: translation(\n      langcode: { eq: $langCode }\n      source: { eq: \"still_searching_description\" }\n    ) {\n      target\n    }\n    callTitle: translation(\n      langcode: { eq: $langCode }\n      source: { eq: \"call_title\" }\n    ) {\n      target\n    }\n    callDescription: translation(\n      langcode: { eq: $langCode }\n      source: { eq: \"call_description\" }\n    ) {\n      target\n    }\n  }\n`;\n","import React from 'react';\n\nimport styles from './headline.module.scss';\n\nconst Headline: React.FC = ({ children }) => {\n  return <h1 className={styles.headline}>{children}</h1>;\n};\n\nexport default Headline;\n","import classNames from 'classnames';\nimport React from 'react';\nimport Link from '../link';\nimport classes from './breadcrumb.module.scss';\n\ninterface INavItem {\n  title: string;\n  url: string;\n}\n\ninterface IProps {\n  items: (string | INavItem)[];\n  variant?: 'normal' | 'inverse';\n}\n\nconst isNavItem = (item: any): item is INavItem => {\n  return (item as INavItem).title !== undefined;\n};\n\nconst getBreadcrumbClasses = (variant: IProps['variant']): string => {\n  return classNames('breadcrumb', classes.breadcrumbContainer, {\n    'breadcrumb--inverse': variant === 'inverse',\n  });\n};\n\nconst Breadcrumb: React.FC<IProps> = ({ items, variant = 'normal' }) => {\n  const getItemClasses = (index: number): string => {\n    return classNames('breadcrumb__item', classes.breadcrumbItem, {\n      [classes.breadcrumbItemActive]: index === items.length - 1,\n    });\n  };\n\n  return (\n    <nav className=\"breadcrumbs\" aria-label=\"breadcrumb\">\n      <ol className={getBreadcrumbClasses(variant)}>\n        {items.map((item, index) => {\n          return (\n            <li\n              key={`breadcrumb-item-${index}`}\n              className={getItemClasses(index)}\n            >\n              {isNavItem(item) ? (\n                <Link\n                  to={item.url}\n                  className=\"breadcrumb__link\"\n                  label={item.title}\n                />\n              ) : (\n                <span className=\"breadcrumb__link\">{item}</span>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headline\":\"headline-module--headline--2EZlD\"};","import React, { FC } from 'react';\nimport classNames from 'classnames';\n\ninterface IProps {\n  className?: string;\n  code?: string;\n}\n\nconst DEFAULT_CODE = 'folder';\n\nexport const ContentIcon: FC<IProps> = ({ className, code }) => {\n  const iconClassName = classNames(className, 'material-icons');\n  return <i className={iconClassName}>{code || DEFAULT_CODE}</i>;\n};\n\nexport default ContentIcon;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbContainer\":\"breadcrumb-module--breadcrumbContainer--aIVuB\",\"breadcrumbItem\":\"breadcrumb-module--breadcrumbItem--3jBwP\",\"breadcrumbItemActive\":\"breadcrumb-module--breadcrumbItemActive--6MwJy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"categoryItem\":\"category-item-module--categoryItem--3V8HX\",\"categoryItemIcon\":\"category-item-module--categoryItemIcon--3wAWD\",\"categoryItemTitle\":\"category-item-module--categoryItemTitle--ErF2o\"};"],"sourceRoot":""}