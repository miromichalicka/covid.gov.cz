{"version":3,"sources":["webpack:///./src/components/category-item/category-item.tsx","webpack:///./node_modules/@material-ui/icons/esm/Phone.js","webpack:///./src/components/looking-for-something/looking-for-something.tsx","webpack:///./src/components/looking-for-something/looking-for-something.module.scss","webpack:///./src/components/pagination/pagination.module.scss","webpack:///./src/components/headline/headline.tsx","webpack:///./src/components/pagination/pagination-button.tsx","webpack:///./src/components/pagination/pagination.tsx","webpack:///./src/hooks/usePagination.ts","webpack:///./src/templates/lists/measures.tsx","webpack:///./src/components/breadcrumb/breadcrumb.tsx","webpack:///./node_modules/@material-ui/icons/esm/KeyboardArrowRight.js","webpack:///./src/components/headline/headline.module.scss","webpack:///./src/components/gov-icon/gov-icon.tsx","webpack:///./src/components/content-icon/content-icon.tsx","webpack:///./src/components/pagination/pagination-button.module.scss","webpack:///./src/components/breadcrumb/breadcrumb.module.scss","webpack:///./src/components/category-item/category-item.module.scss"],"names":["name","path","iconCode","to","className","styles","code","categoryItemTitle","style","fontSize","createSvgIcon","createElement","d","searchingHeader","searchingDescription","callHeader","callDescription","classes","container","section","dangerouslySetInnerHTML","__html","description","separator","header","href","link","module","exports","children","headline","index","active","onClick","classNames","pageCount","currentPage","handleChange","col","justify","icon","Array","key","i","pageSize","Math","items","useState","setCurrentPage","useCallback","newIndex","slicedItems","useMemo","query","data","nodes","searchingTitle","callTitle","usePagination","pagination","title","I18n","url","variant","noPadding","n","target","getBreadcrumbClasses","getItemClasses","aria-label","item","isNavItem","label","size","tooltip","iconClassName"],"mappings":"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","file":"component---src-templates-lists-measures-tsx-1e3132782a5040ea2f64.js","sourcesContent":["import { KeyboardArrowRight } from '@material-ui/icons';\nimport Link from '@/components/link';\nimport ContentIcon from '@/components/content-icon/content-icon';\nimport React, { FC } from 'react';\n\nimport styles from './category-item.module.scss';\n\ntype Props = {\n  name: string;\n  path: string;\n  iconCode: string;\n};\n\nconst CategoryItem: FC<Props> = ({ name, path, iconCode }) => {\n  return (\n    <Link to={path} className={styles.categoryItem + ' py-1'}>\n      <ContentIcon className={styles.categoryItemIcon} code={iconCode} />\n      <span className={styles.categoryItemTitle}>{name}</span>\n      <KeyboardArrowRight style={{ fontSize: 16 }} className=\"color-yellow\" />\n    </Link>\n  );\n};\n\nexport default CategoryItem;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z\"\n}), 'Phone');","import { Phone } from '@material-ui/icons';\nimport React from 'react';\nimport classes from './looking-for-something.module.scss';\n\ninterface IProps {\n  searchingHeader: string;\n  searchingDescription: string;\n  callHeader: string;\n  callDescription: string;\n}\n\nconst LookingForSomething: React.FC<IProps> = ({\n  searchingHeader,\n  searchingDescription,\n  callHeader,\n  callDescription,\n}: IProps) => {\n  return (\n    <div className={classes.container}>\n      <section className={classes.section}>\n        <header\n          className={classes.header}\n          dangerouslySetInnerHTML={{ __html: searchingHeader }}\n        />\n        <p className={classes.description}>{searchingDescription}</p>\n      </section>\n\n      <hr className={classes.separator} />\n\n      <section className={classes.section}>\n        <Phone fontSize=\"large\" className=\"mr-2\" />\n        <header className={classes.header}>\n          {callHeader}\n          &nbsp;\n          <strong>\n            <a href=\"tel:1221\" className={classes.link}>\n              1121\n            </a>\n          </strong>\n        </header>\n        <p className={classes.description}>{callDescription}</p>\n      </section>\n    </div>\n  );\n};\n\nexport default LookingForSomething;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"looking-for-something-module--container--3l5Nn\",\"section\":\"looking-for-something-module--section--16Yia\",\"description\":\"looking-for-something-module--description--2asjn\",\"header\":\"looking-for-something-module--header--Fc6hb\",\"link\":\"looking-for-something-module--link--k-zEl\",\"separator\":\"looking-for-something-module--separator--10Fs-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationArrow\":\"pagination-module--paginationArrow--1oo-m\",\"paginationContainer\":\"pagination-module--paginationContainer--3-Eji\"};","import React from 'react';\n\nimport styles from './headline.module.scss';\n\nconst Headline: React.FC = ({ children }) => {\n  return <h1 className={styles.headline}>{children}</h1>;\n};\n\nexport default Headline;\n","import classNames from 'classnames';\nimport React from 'react';\nimport classes from './pagination-button.module.scss';\n\ninterface IProps {\n  index: number;\n  active: boolean;\n  onClick: (index: number) => void;\n}\n\nconst PaginationButton: React.FC<IProps> = ({\n  index,\n  active,\n  onClick,\n  children,\n}) => {\n  // paginator__link active\n  return (\n    <li\n      className={classNames('paginator__item', classes.paginationClickItem)}\n      onClick={() => onClick(index)}\n    >\n      <span\n        className={classNames(\n          'paginator__link',\n          { active: active },\n          classes.paginationInnerItem,\n        )}\n      >\n        {index + 1}\n        {children}\n      </span>\n    </li>\n  );\n};\n\nexport default PaginationButton;\n","import classNames from 'classnames';\nimport React from 'react';\nimport Col from '../col';\nimport GovIcon from '../gov-icon';\nimport Row from '../row';\nimport PaginationButton from './pagination-button';\nimport classes from './pagination.module.scss';\n\ninterface IProps {\n  /** How many items should be on one page.\n   * ```25 | 50 | 75 | 100``` are recommended,\n   * however default is **10**.\n   * You can pass any number.\n   */\n  pageCount: number;\n  currentPage: number;\n  handleChange: (index: number) => void;\n}\n\n/**\n * Renders pagination page controls\n * Pass values from usePagination hook\n */\nconst Pagination: React.FC<IProps> = ({\n  pageCount,\n  currentPage,\n  handleChange,\n}) => {\n  /**\n   * TODO: [Not important at the moment]\n   * Update component so it doesn't list all pages, but only chunks\n   * Instead of listing all 20 pages\n   * < 1 ... 10 11 *12* 13 14 ... 20 >\n   */\n\n  if (pageCount <= 1) {\n    return null;\n  }\n\n  /**\n   * paginator__arrow\n   * paginator__link--disabled\n   */\n  return (\n    <Col col={12}>\n      <Row justify=\"center\">\n        <div\n          className={classNames(\n            'paginator__holder',\n            classes.paginationContainer,\n          )}\n        >\n          <div className=\"paginator\">\n            <ul className=\"paginator__list\">\n              <li className=\"paginator__item pr-0\">\n                <a\n                  onClick={() => handleChange(currentPage - 1)}\n                  className={classNames(\n                    'paginator__link',\n                    classes.paginationArrow,\n                    {\n                      'paginator__link--disabled': currentPage === 0,\n                    },\n                  )}\n                >\n                  <GovIcon className=\"paginator__arrow\" icon=\"arrow-left\" />\n                </a>\n              </li>\n              {[...Array(pageCount).keys()].map((i) => (\n                <PaginationButton\n                  key={i}\n                  index={i}\n                  onClick={handleChange}\n                  active={i === currentPage}\n                />\n              ))}\n              <li className=\"paginator__item pr-0\">\n                <a\n                  onClick={() => handleChange(currentPage + 1)}\n                  className={classNames(\n                    'paginator__link',\n                    classes.paginationArrow,\n                    {\n                      'paginator__link--disabled':\n                        currentPage === pageCount - 1,\n                    },\n                  )}\n                >\n                  <GovIcon className=\"paginator__arrow\" icon=\"arrow-right\" />\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </Row>\n    </Col>\n  );\n};\n\nexport default Pagination;\n","import { useCallback, useMemo, useState } from 'react';\n\n/**\n * Wraps paging logic,\n * Can be passed to Pagination component\n * Use slicedItems to get array of current page items\n */\nconst usePagination = <T extends unknown>(items: T[], pageSize = 10) => {\n  const pageCount = Math.ceil(items.length / pageSize);\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const handleChange = useCallback(\n    (newIndex: number) => {\n      if (newIndex < 0 || newIndex > pageCount - 1) {\n        return;\n      }\n      setCurrentPage(newIndex);\n    },\n    [currentPage],\n  );\n\n  const slicedItems = useMemo(\n    () => items.slice(currentPage * pageSize, (currentPage + 1) * pageSize),\n    [currentPage, pageSize],\n  );\n\n  return {\n    pageCount,\n    currentPage,\n    handleChange,\n    slicedItems,\n  };\n};\n\nexport default usePagination;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport ContentBox from '@/components/content-box';\nimport Container from '@/components/container';\nimport { IQuery } from 'graphql-types';\nimport Breadcrumb from '@/components/breadcrumb';\nimport Headline from '@/components/headline';\nimport CategoryItem from '@/components/category-item';\nimport LookingForSomething from '@/components/looking-for-something';\nimport Pagination from '@/components/pagination';\nimport usePagination from '@/hooks/usePagination';\nimport Layout from '@/layouts/default-layout';\nimport I18n from '@/components/i18n';\n\ninterface IProps {\n  data: IQuery;\n}\n\nconst Measures: React.FC<IProps> = ({ data }) => {\n  const {\n    allTaxonomyTermMeasureType: { nodes },\n  } = data;\n\n  const {\n    searchingTitle,\n    searchingDescription,\n    callTitle,\n    callDescription,\n  } = data as any;\n\n  const { slicedItems, ...pagination } = usePagination(nodes);\n\n  return (\n    <Layout>\n      <Helmet\n        title={\n          I18n('current_measures_overview') +\n          ' | ' +\n          I18n('covid_portal').toUpperCase()\n        }\n      />\n      <Container className=\"pt-1\">\n        <Breadcrumb\n          items={[\n            { title: I18n('home'), url: '/' },\n            { title: I18n('current_measures'), url: I18n('slug_measures') },\n          ]}\n          variant=\"inverse\"\n        />\n      </Container>\n      <Container className=\"mt-3\">\n        <Headline>{I18n('current_measures_overview')}</Headline>\n      </Container>\n      <Container className=\"mt-3\">\n        <ContentBox noPadding>\n          {slicedItems.map(\n            (n) =>\n              n.relationships.measure !== null && (\n                <CategoryItem\n                  key={n.id}\n                  name={n.name}\n                  path={n.path.alias}\n                  iconCode={n.relationships.field_ref_icon?.code}\n                />\n              ),\n          )}\n        </ContentBox>\n        <Pagination {...pagination} />\n      </Container>\n      <Container className=\"mt-3 mb-3\">\n        <LookingForSomething\n          searchingHeader={searchingTitle.target}\n          searchingDescription={searchingDescription.target}\n          callHeader={callTitle.target}\n          callDescription={callDescription.target}\n        />\n      </Container>\n    </Layout>\n  );\n};\nexport default Measures;\n\nexport const query = graphql`\n  query MeasureTypeQuery($langCode: String!) {\n    allTaxonomyTermMeasureType(\n      filter: { langcode: { eq: $langCode } }\n      sort: { fields: name }\n    ) {\n      nodes {\n        id\n        name\n        path {\n          alias\n        }\n        relationships {\n          field_ref_icon {\n            code\n          }\n          measure {\n            id\n          }\n        }\n      }\n    }\n    searchingTitle: translation(\n      langcode: { eq: $langCode }\n      source: { eq: \"still_searching_title\" }\n    ) {\n      target\n    }\n    searchingDescription: translation(\n      langcode: { eq: $langCode }\n      source: { eq: \"still_searching_description\" }\n    ) {\n      target\n    }\n    callTitle: translation(\n      langcode: { eq: $langCode }\n      source: { eq: \"call_title\" }\n    ) {\n      target\n    }\n    callDescription: translation(\n      langcode: { eq: $langCode }\n      source: { eq: \"call_description\" }\n    ) {\n      target\n    }\n  }\n`;\n","import classNames from 'classnames';\nimport React from 'react';\nimport Link from '../link';\nimport classes from './breadcrumb.module.scss';\n\ninterface INavItem {\n  title: string;\n  url: string;\n}\n\ninterface IProps {\n  items: (string | INavItem)[];\n  variant?: 'normal' | 'inverse';\n}\n\nconst isNavItem = (item: any): item is INavItem => {\n  return (item as INavItem).title !== undefined;\n};\n\nconst getBreadcrumbClasses = (variant: IProps['variant']): string => {\n  return classNames('breadcrumb', classes.breadcrumbContainer, {\n    'breadcrumb--inverse': variant === 'inverse',\n  });\n};\n\nconst Breadcrumb: React.FC<IProps> = ({ items, variant = 'normal' }) => {\n  const getItemClasses = (index: number): string => {\n    return classNames('breadcrumb__item', classes.breadcrumbItem, {\n      [classes.breadcrumbItemActive]: index === items.length - 1,\n    });\n  };\n\n  return (\n    <nav className=\"breadcrumbs\" aria-label=\"breadcrumb\">\n      <ol className={getBreadcrumbClasses(variant)}>\n        {items.map((item, index) => {\n          return (\n            <li\n              key={`breadcrumb-item-${index}`}\n              className={getItemClasses(index)}\n            >\n              {isNavItem(item) ? (\n                <Link\n                  to={item.url}\n                  className=\"breadcrumb__link\"\n                  label={item.title}\n                />\n              ) : (\n                <span className=\"breadcrumb__link\">{item}</span>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headline\":\"headline-module--headline--2EZlD\"};","import classNames from 'classnames';\nimport React from 'react';\n\ninterface IProps {\n  icon:\n    | 'person'\n    | 'search'\n    | 'dots-three-vertical'\n    | 'pvs-logo'\n    | 'pvs-logo-text'\n    | 'accordion-arrow-down'\n    | 'accordion-arrow-up'\n    | 'accordion-arrow-left'\n    | 'accordion-arrow-right'\n    | 'arrow-list-down'\n    | 'arrow-list-up'\n    | 'arrow-list-left'\n    | 'arrow-list-right'\n    | 'arrow-down'\n    | 'arrow-up'\n    | 'arrow-left'\n    | 'arrow-right'\n    | 'check'\n    | 'external-link'\n    | 'rss'\n    | 'data-box'\n    | 'pin'\n    | 'calendar'\n    | 'plus'\n    | 'thin-plus'\n    | 'alert'\n    | 'mail'\n    | 'close'\n    | 'circle-plus'\n    | 'circle-minus'\n    | 'time'\n    | 'star'\n    | 'attachment'\n    | 'message'\n    | 'notification'\n    | 'settings'\n    | 'exit'\n    | 'squares-grid';\n  size?: 10 | 16 | 20 | 24 | 32;\n  tooltip?: string;\n  className?: string;\n}\n\nconst GovIcon: React.FC<IProps> = ({ icon, size, tooltip = '', className }) => {\n  return (\n    <span\n      title={tooltip}\n      className={classNames(`pvs-theme-icon-${icon}`, className)}\n      style={{ fontSize: size }}\n    />\n  );\n};\n\nexport default GovIcon;\n","import React, { FC } from 'react';\nimport classNames from 'classnames';\n\ninterface IProps {\n  className?: string;\n  code?: string;\n}\n\nconst DEFAULT_CODE = 'folder';\n\nexport const ContentIcon: FC<IProps> = ({ className, code }) => {\n  const iconClassName = classNames(className, 'material-icons');\n  return <i className={iconClassName}>{code || DEFAULT_CODE}</i>;\n};\n\nexport default ContentIcon;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationClickItem\":\"pagination-button-module--paginationClickItem--ZTAaA\",\"paginationInnerItem\":\"pagination-button-module--paginationInnerItem--1Zyzb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbContainer\":\"breadcrumb-module--breadcrumbContainer--aIVuB\",\"breadcrumbItem\":\"breadcrumb-module--breadcrumbItem--3jBwP\",\"breadcrumbItemActive\":\"breadcrumb-module--breadcrumbItemActive--6MwJy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"categoryItem\":\"category-item-module--categoryItem--3V8HX\",\"categoryItemIcon\":\"category-item-module--categoryItemIcon--3wAWD\",\"categoryItemTitle\":\"category-item-module--categoryItemTitle--ErF2o\"};"],"sourceRoot":""}